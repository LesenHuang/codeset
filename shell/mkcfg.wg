#!/bin/bash

main() {

  argc=${#@}
  argv=($@)
  
  check_wg

  key=$(wg genkey)
  Pubkey=$(echo $key | wg pubkey)

  Ckey=$(wg genkey)
  Cpubkey=$(echo $Ckey | wg pubkey)

  echo ============================
  echo Server Private Key: $key
  echo Server Public Key: $Pubkey

  echo Client Private Key: $Ckey
  echo Client Public Key: $Cpubkey
  echo ============================

  valids=(-p -a -e -h -f)

  for ((j=0; j<${#valids[*]}; j++)); do
    for ((i=0; i<$argc; i++)); do

      if [ ${argv[$i]} == ${valids[$j]} ]; then
        case ${argv[$i]} in
          -p)
            portregexp='^([1-5][0-9]{4}|6[0-5]{2}[0-3][0-5])$'

            [[ ! ${argv[$i + 1]} =~ $portregexp ]] && echo Invalid argument ${argv[$i + 1]} && exit 1
            port=${argv[$i + 1]}
          ;;
          -a)
            ipregexp='^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-5]{2})(.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-5]{2})){3}$'

            [[ ! ${argv[$i + 1]} =~ $ipregexp ]] && echo Invalid argument ${argv[$i + 1]} && exit 1
            ServerIP=${argv[$i + 1]}
          ;;
          -e)
            exportsregexp='^([0-9]|[a-z]|[A-Z])+$' 

            [[ ! ${argv[$i + 1]} =~ $exportsregexp ]] && echo Invalid argument ${argv[$i + 1]} && exit 1
            exports=${argv[$i + 1]}
          ;;
          -h)
            helpf
          ;;
          -f)
            make_config ${argv[$i + 1]} ${argv[$i + 2]}
          ;;
        esac
      fi
    done

  done

  [ $argc -eq 0 ] && helpf

  return 0

}

helpf() { echo "Usage: '$0 -f <server file> <client file> .conf format.'"; exit 0; }

make_config() {

  [ ! $exports ] && exports=eth0
  [ ! $port ] && port=51820
  [ ! $ServerIP ] && ServerIP=`curl zx2c4.com/ip 2> /dev/null | sed -n '1p'` # 4.ipw.cn

  if ! [[  $1 =~ .conf$ &&  $2 =~ .conf$ ]]; then 
    helpf
  fi

  if ! [ -e $1 -o -e $2 ]; then

  {

    echo "[Interface] # Server"
    echo "PrivateKey = $key"
    echo "Address 	 = 10.0.0.1"
    echo "ListenPort = $port"
    echo

    echo "PostUp   = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o $exports -j MASQUERADE"
    echo "PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o $exports -j MASQUERADE"
    echo "# vim /etc/sysctl.conf"
    echo "# net.ipv4.ip_forward = 1"
    echo "# sysctl -p"
    echo "# or"
    echo "# sysctl -e net.ipv4.ip_forward = 1"

    echo "[Peer]"
    echo "PublicKey  = $Cpubkey"
    echo "AllowedIPs = 10.0.0.2"

  } > $1

  {

    echo "[Interface] # Client"
    echo "PrivateKey = $Ckey"
    echo "Address    = 10.0.0.2"
    echo "MTU        = 1420"
    echo "DNS        = 1.1.1.1, 8.8.8.8, 114.114.114.114"
    echo

    echo "[Peer] # Mac"
    echo "PublicKey = $Pubkey"
    echo "Endpoint = $ServerIP:$port"
    echo "#AllowedIPs = 0.0.0.0/0"
    echo "AllowedIPs = 0.0.0.0/5, 8.0.0.0/7, 11.0.0.0/8, 12.0.0.0/6, 16.0.0.0/4, 32.0.0.0/3, 64.0.0.0/2, \
128.0.0.0/3, 160.0.0.0/5, 168.0.0.0/6, 172.0.0.0/12, 172.32.0.0/11, 172.64.0.0/10, 172.128.0.0/9, \
173.0.0.0/8, 174.0.0.0/7, 176.0.0.0/4, 192.0.0.0/9, 192.128.0.0/11, 192.160.0.0/13, 192.169.0.0/16, \
192.170.0.0/15, 192.172.0.0/14, 192.176.0.0/12, 192.192.0.0/10, 193.0.0.0/8, 194.0.0.0/7, 196.0.0.0/6, \
200.0.0.0/5, 208.0.0.0/4, 1.1.1.1/32"
    echo "PersistentKeepalive = 25"

  } > $2
    
    cat $1
    echo =============================
    cat $2
    
    return
  fi

  echo $1 or $2 already exist.

  exit 1;

}

check_wg() {

  if wg; then

    echo "You already installed wg, could exec of next."

  else

    echo "Error: wg command is not exist!!!"

    echo "Please install wireguard tools."

    exit 1;

  fi

}

main $@
